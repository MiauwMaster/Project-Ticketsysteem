@using iTextSharp.text;
@using iTextSharp.text.pdf;
@using QRCoder;
@using System.Net.Mail;
@{
    //Variables
    var artiest = "";
    var foto = "";
    var db = Database.Open("Database");

    DateTime datum = new DateTime();
    var zaal = 0;
    var prijs = Decimal.One;
    int ticketID = 0;
    var concertID = Session["concertid"];
    var bestelNR = Request.QueryString["id"]; // uit vorige pagina halen

    // Random for pdf name
    var rand = new Random().Next(1111111, 9999999);

    //Get email

    var statement5 = "SELECT email FROM Bestellingen WHERE id = @0";
    var userEmail = db.QueryValue(statement5, bestelNR);

    //Checken of er betaald is
    var statement1 = "SELECT betaald FROM Bestellingen WHERE email = @0";
    var data1 = db.QueryValue(statement1, userEmail);

    if (data1 == false)
    {
        Response.Redirect("~//Default.cshtml");
    }

    //Select alle tickets met het gegeven bestelnummer
    var statement = "SELECT * FROM Tickets WHERE bestel_nr = @0";
    var data = db.Query(statement, bestelNR);

    Document doc = new Document(PageSize.A4.Rotate(), 25, 25, 30, 30);

    PdfWriter writer = PdfWriter.GetInstance(doc, new FileStream(Server.MapPath("Tickets") + "\\" + bestelNR + rand + ".pdf", FileMode.Create));
    doc.Open();

    // Fonts
    var titleFont = FontFactory.GetFont("Verdana", 40, BaseColor.BLACK);
    var parFont = FontFactory.GetFont("Verdana", 15, BaseColor.BLACK);

    foreach (var row in data)
    {
        // Create new page for each ticket
        doc.NewPage();

        //Get concert van ticket
        var statement2 = "SELECT * FROM Concerten WHERE id = @0";
        var data2 = db.QuerySingle(statement2, row.concertId);

        //Fill variables
        artiest = data2.naam;
        foto = Server.MapPath("~") + data2.foto;
        datum = data2.datum;
        zaal = data2.zaal_nr;
        prijs = data2.prijs;
        ticketID = row.id;


        // Print artist name as ticket title
        var title = new Phrase(artiest, titleFont);

        //Generate QR Code
        QRCodeGenerator qrGenerator = new QRCodeGenerator();
        QRCodeData qrCodeData = qrGenerator.CreateQrCode("TODO: URL invoegen" + ticketID, QRCodeGenerator.ECCLevel.Q);
        QRCode qrCode = new QRCode(qrCodeData);
        System.Drawing.Image qrCodeImage = qrCode.GetGraphic(5);

        // print QR Code
        Image jpg = Image.GetInstance(qrCodeImage, BaseColor.WHITE);

        // print rest of ticket info
        var datump = new Phrase(@"Datum: " + datum.ToString("dd MMMM, yyyy HH:mm"), parFont);
        var zaalp = new Phrase("Zaal: " + zaal.ToString(), parFont);

        //Checken op korting
        var statement4 = "SELECT kindOf65plus FROM Tickets WHERE id = @0";
        var korting = db.QueryValue(statement4, ticketID);

        Phrase prijsp = new Phrase();
        if (korting == false)
        {
            prijsp = new Phrase("Prijs: \u20AC" + string.Format("{0:0.00}", prijs), parFont);
        }

        else if (korting == true)
        {
            decimal prijsMetKorting = prijs * 0.9m;
            prijsp = new Phrase("Prijs: \u20AC" + string.Format("{0:0.00}", prijsMetKorting), parFont);
            
        }

        // Add artist photo
        Image artist = null;
        if (foto != null)
        {
            artist = Image.GetInstance(foto);
            artist.ScaleToFit(200f, 200f);
        }

        PdfPTable table = new PdfPTable(3);
        table.DefaultCell.Border = Rectangle.NO_BORDER;
        table.DefaultCell.VerticalAlignment = Element.ALIGN_MIDDLE;

        PdfPCell titel = new PdfPCell(title);
        titel.Colspan = 3;
        titel.Border = Rectangle.NO_BORDER;
        titel.FixedHeight = 50f;
        titel.HorizontalAlignment = 1;

        PdfPCell info = new PdfPCell();
        info.Border = Rectangle.NO_BORDER;
        info.HorizontalAlignment = 1;
        info.VerticalAlignment = Element.ALIGN_MIDDLE;
        info.AddElement(datump);
        info.AddElement(zaalp);
        info.AddElement(prijsp);

        table.AddCell(titel);
        table.AddCell(jpg);
        table.AddCell(info);
        table.AddCell(artist);

        doc.Add(table);

        if (!WebSecurity.IsAuthenticated)
        {
            Paragraph email = new Paragraph("Dit ticket is ook verstuurd naar het emailadres: " + userEmail.ToString(), parFont);
            email.Alignment = Element.ALIGN_CENTER;
            doc.Add(email);
        }
    }

    doc.Close();

    Response.Clear();

    //Generate pdf on page

    string filePath = Server.MapPath("Tickets") + "//" + bestelNR.ToString() + rand.ToString() + ".pdf";

    Response.ContentType = "application/pdf";

    Response.WriteFile(filePath);

    //Send mail
    if (userEmail != "ticketsysteemnhl@gmail.com")
    {
        MailAddress mailfrom = new MailAddress("ticketsysteemnhl@gmail.com");
        MailAddress mailto = new MailAddress(userEmail.ToString());
        MailMessage newmsg = new MailMessage(mailfrom, mailto);

        newmsg.Subject = "Uw Ticket(s)";
        newmsg.Body = "Hartelijk bedankt voor het bestellen. In de bijlage vind u een pdf met uw ticket(s), deze dient u te printen en te laten zien bij binnenkomst.";

        //Ticket attachment
        Attachment att = new Attachment(Server.MapPath("Tickets") + "\\" + bestelNR + rand + ".pdf");
        newmsg.Attachments.Add(att);

        //SMTP server info
        SmtpClient smtp = new SmtpClient("smtp.gmail.com", 587);
        smtp.UseDefaultCredentials = false;
        smtp.Credentials = new NetworkCredential("ticketsysteemnhl@gmail.com", "waltersamplonius");
        smtp.EnableSsl = true;
        smtp.Send(newmsg);
    }
}